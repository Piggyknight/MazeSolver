#cmake version
cmake_minimum_required(VERSION 2.8)
project(MazeSolver)

if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
		message(STATUS "Setting build type to 'Release as none was specified.")
		set(CMAKE_BUILD_TYPE Release CACHE STRING "Choose the type of build." FORCE)
		#set possible values of built type for cmake-gui
		set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Release" "Debug"
						"MinSizeRel" "RelWithDebInfo")
endif()

set(EXECUTABLE_NAME "MazeSovler")
set(VERSION_MAJOR 0)
set(VERSION_MINOR 1)
configure_file(
				"${PROJECT_SOURCE_DIR}/config.h.in"
				"${PROJECT_BINARY_DIR}/config.h"
				)

set(HEADERS
				src/mazeGen/disjointSets.hpp
				src/mazeGen/mazeGen.hpp
				src/mazeGen/cls.hpp
)

set(SOURCES
				src/mazeGen/disjointSets.cpp
				src/mazeGen/mazeGen.cpp
				src/main.cpp
)

set(Boost_USE_STATIC_LIBS OFF)
set(Boost_USE_MULTITHREADED ON)
set(Boost_USE_STATIC_RUNTIME OFF)
set(BOOST_LIBRARYDIR ${BOOST_ROOT}/libs)
find_package(Boost COMPONENTS python REQUIRED)

include_directories("${PROJECT_BINARY_DIR}")
include_directories("${PROJECT_SOURCE_DIR}/src/mazeGen")
include_directories("${PROJECT_SOURCE_DIR}/src/mazeSolve")

if(Boost_FOUND)
		include_directories(${Boost_INCLUDE_DIRS})
		target_link_libraries(${EXECUTABLE_NAME} ${Boost_LIBRARIES})
endif()

add_executable(${EXECUTABLE_NAME} ${SOURCES} ${HEADERS})
	
